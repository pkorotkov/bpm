package bpm

var samplePositions = make(map[string][]int64)

func init() {
	samplePositions[spatterns[0]] = []int64{0x10A, 0x241, 0x2E5, 0x4D8, 0x57C, 0x6AA, 0xAA5, 0xE38, 0xF59, 0x1130, 0x1431, 0x1559, 0x1677, 0x1829, 0x1B1C, 0x1C3B, 0x1CD9, 0x1E1D, 0x1EB7, 0x1FE5, 0x2113, 0x21B7, 0x224C, 0x22F0, 0x237B, 0x25C6, 0x266A, 0x2717, 0x283F, 0x28DD, 0x298A, 0x2ACA, 0x2C01, 0x2C96, 0x2D3A, 0x2DDC, 0x2E71, 0x2F06, 0x3041, 0x30E5, 0x3203, 0x32A1, 0x335B, 0x37B0, 0x3A89, 0x3B21, 0x3D07, 0x3D9C, 0x41A5, 0x423A, 0x4371, 0x449F, 0x48C5, 0x495A, 0x4B56, 0x4BFA, 0x4D31, 0x4E5D, 0x4F89, 0x51E1, 0x5285, 0x531A, 0x54C8, 0x5566, 0x569D, 0x5741, 0x586F, 0x599D, 0x5CAA, 0x5E70, 0x5F14, 0x5FA9, 0x60D7, 0x617B, 0x62A9, 0x63DE, 0x647C, 0x66E3, 0x67F8, 0x688D, 0x6931, 0x6C49, 0x6CFA, 0x6D98, 0x6E3C, 0x6F6A, 0x6FFF, 0x70A3, 0x7147, 0x71E5, 0x727A, 0x73B5, 0x760D, 0x7739, 0x77CE, 0x7863, 0x7910, 0x7A4D, 0x7B07, 0x7B9C, 0x7C40, 0x7CD5, 0x7D6A, 0x809C, 0x830F, 0x83A4, 0x84D7, 0x860A, 0x8732, 0x87DF, 0x8BD4, 0x8C78, 0x8E30, 0x8F5E, 0x9002, 0x9252, 0x94BD, 0x9552, 0x95FF, 0x973A, 0x9904, 0x9EBF, 0x9F63, 0xA014, 0xA0B8, 0xA169, 0xA1FE, 0xA2AB, 0xA3F4, 0xA48E, 0xA5AD, 0xA6E0, 0xA791, 0xA8BF, 0xA954, 0xA9E9, 0xAB33, 0xABCD, 0xAE43, 0xB3A5, 0xB449, 0xB568, 0xB687, 0xB725, 0xB85C, 0xB8F1, 0xBB54, 0xBC8F, 0xBD33, 0xBF8D, 0xC0AC, 0xC141, 0xC1E5, 0xC393, 0xC437, 0xC556, 0xC5FA, 0xC7D3, 0xCB6C, 0xCD54, 0xCE01, 0xCE96, 0xCF3A, 0xD0FF, 0xD2C8, 0xD408, 0xD49D, 0xD532, 0xD700, 0xD795, 0xD82A, 0xD9EF, 0xDA93, 0xDB37, 0xDBCC, 0xDC61, 0xDD03, 0xDE31, 0xDF55, 0xDFF9, 0xE097, 0xE25E, 0xE2F3, 0xE437, 0xE4DB, 0xE612, 0xE7E6, 0xE9A7, 0xEAD3, 0xEB68, 0xECAE, 0xED52, 0xEDF9, 0xEF3F, 0xF076}
	samplePositions[spatterns[1]] = []int64{0x37A, 0x429, 0xA0E, 0xB3A, 0xC60, 0xE43, 0xF64, 0x113B, 0x12FA, 0x1391, 0x1CE4, 0x2A24, 0x2D45, 0x2F11, 0x32AC, 0x3531, 0x35D1, 0x3680, 0x39E3, 0x3A94, 0x3B2C, 0x3FDE, 0x4084, 0x4543, 0x470B, 0x4965, 0x4AA7, 0x4D3C, 0x4E68, 0x4F94, 0x5AD4, 0x5C13, 0x62B4, 0x65B3, 0x6A77, 0x6C54, 0x731E, 0x74D4, 0x7618, 0x7A58, 0x7D75, 0x7E1B, 0x7EB2, 0x80A7, 0x81D7, 0x8273, 0x8997, 0x8B47, 0x925D, 0x9303, 0x960A, 0x9868, 0x9D0B, 0x9F6E, 0xA0C3, 0xA358, 0xA6EB, 0xA9F4, 0xABD8, 0xAFFB, 0xB1C4, 0xBBF8, 0xC72D, 0xC901, 0xD059, 0xD10A, 0xD53D, 0xD949, 0xDC6C, 0xE2FE, 0xE6A7, 0xEA3C, 0xED5D}
	samplePositions[spatterns[2]] = []int64{0x115, 0x24C, 0x387, 0x436, 0x4E3, 0x611, 0x6B5, 0x975, 0xB47, 0xC6D, 0xD06, 0xD9F, 0xFFB, 0x11D2, 0x1261, 0x1834, 0x19EA, 0x1A83, 0x1D84, 0x1E28, 0x1F4C, 0x207A, 0x211E, 0x2257, 0x252D, 0x25D1, 0x2675, 0x28E8, 0x2995, 0x2A31, 0x2B5F, 0x2CA1, 0x2F1E, 0x304C, 0x32B9, 0x3366, 0x33FF, 0x3498, 0x35DE, 0x368D, 0x39F0, 0x3BCC, 0x3C6E, 0x3EBB, 0x3FEB, 0x42CF, 0x437C, 0x44AA, 0x4550, 0x4669, 0x4718, 0x4972, 0x4AB4, 0x4B61, 0x4C05, 0x5148, 0x51EC, 0x53A5, 0x5571, 0x56A8, 0x574C, 0x5904, 0x59A8, 0x5AE1, 0x5B7A, 0x5CB5, 0x5D4E, 0x5E7B, 0x603E, 0x60E2, 0x6210, 0x6487, 0x65C0, 0x6898, 0x693C, 0x69D5, 0x6B0E, 0x6BB0, 0x6C61, 0x6DA3, 0x6ED1, 0x700A, 0x70AE, 0x7285, 0x7574, 0x786E, 0x791B, 0x79B4, 0x7A65, 0x7BA7, 0x7D82, 0x7EBF, 0x7F61, 0x8003, 0x80B4, 0x81E4, 0x8280, 0x83AF, 0x843E, 0x84E2, 0x8571, 0x873D, 0x8874, 0x8AAE, 0x8BDF, 0x8D0D, 0x8E3B, 0x8F69, 0x900D, 0x9130, 0x926A, 0x9310, 0x955D, 0x9617, 0x97CF, 0x9875, 0x9A23, 0x9B46, 0x9C72, 0x9ECA, 0x9F7B, 0xA01F, 0xA0D0, 0xA209, 0xA2B6, 0xA365, 0xA3FF, 0xA5B8, 0xA651, 0xA6F8, 0xA826, 0xAA01, 0xAA9A, 0xAB3E, 0xABE5, 0xAC7E, 0xADA1, 0xAED8, 0xB092, 0xB12B, 0xB1D1, 0xB26A, 0xB303, 0xB3B0, 0xB7C3, 0xBA19, 0xBAB2, 0xBB5F, 0xBC9A, 0xBD3E, 0xBDD7, 0xC14C, 0xC1F0, 0xC39E, 0xC561, 0xC605, 0xC694, 0xC73A, 0xC868, 0xC90E, 0xC9A7, 0xCAD3, 0xCB77, 0xCC10, 0xCCB2, 0xCD5F, 0xCEA1, 0xD066, 0xD197, 0xD226, 0xD2D3, 0xD667, 0xD956, 0xD9FA, 0xDA9E, 0xDD98, 0xDEC6, 0xDF60, 0xE12C, 0xE1C5, 0xE30B, 0xE442, 0xE579, 0xE6B4, 0xE74D, 0xE90E, 0xEB73, 0xEC15, 0xECB9, 0xED6A, 0xEE04, 0xEEA6, 0xEF4A}
	samplePositions[spatterns[3]] = []int64{0x80, 0x124, 0x1AE, 0x25B, 0x2F0, 0x396, 0x445, 0x4F2, 0x587, 0x620, 0x6C4, 0x7CE, 0x858, 0x8EB, 0x984, 0xA1B, 0xAB0, 0xBD6, 0xC7C, 0xD15, 0xDAE, 0xF71, 0x100A, 0x109D, 0x1148, 0x1270, 0x1307, 0x139E, 0x143C, 0x14C6, 0x15ED, 0x1682, 0x170C, 0x179F, 0x1843, 0x18D6, 0x1960, 0x19F9, 0x1A92, 0x1B27, 0x1BB1, 0x1C46, 0x1CF1, 0x1D93, 0x1EC2, 0x1F5B, 0x1FF0, 0x2089, 0x212D, 0x21C2, 0x2266, 0x2386, 0x2410, 0x24A3, 0x253C, 0x25E0, 0x2684, 0x2722, 0x27AC, 0x284A, 0x28F7, 0x2A40, 0x2AD5, 0x2B6E, 0x2C0C, 0x2CB0, 0x2D52, 0x2DE7, 0x2E7C, 0x2F2D, 0x2FB7, 0x305B, 0x30F0, 0x320E, 0x32C8, 0x3375, 0x340E, 0x34A7, 0x353E, 0x35ED, 0x369C, 0x3726, 0x37BB, 0x3845, 0x38CF, 0x3959, 0x39FF, 0x3B39, 0x3BDB, 0x3C7D, 0x3D12, 0x3DA7, 0x3E31, 0x3ECA, 0x3F54, 0x3FFA, 0x4091, 0x411B, 0x41B0, 0x4245, 0x42DE, 0x438B, 0x4415, 0x44B9, 0x455F, 0x4678, 0x4727, 0x47B1, 0x483B, 0x48D0, 0x4981, 0x4A14, 0x4AC3, 0x4B70, 0x4C14, 0x4C9E, 0x4D49, 0x4DD3, 0x4E75, 0x4EFF, 0x4FA1, 0x502B, 0x50B5, 0x5157, 0x51FB, 0x5290, 0x53B4, 0x543E, 0x54D3, 0x5580, 0x560A, 0x56B7, 0x575B, 0x57E5, 0x587A, 0x5913, 0x59B7, 0x5A4A, 0x5AF0, 0x5B89, 0x5C20, 0x5CC4, 0x5DDD, 0x5E8A, 0x5F1F, 0x5FB4, 0x604D, 0x60F1, 0x6186, 0x621F, 0x62C1, 0x634B, 0x63E9, 0x6496, 0x6529, 0x65CF, 0x6659, 0x676E, 0x6803, 0x68A7, 0x694B, 0x69E4, 0x6A84, 0x6B1D, 0x6BBF, 0x6C70, 0x6D05, 0x6DB2, 0x6E47, 0x6EE0, 0x6F75, 0x7019, 0x70BD, 0x7152, 0x71F0, 0x7294, 0x732B, 0x73C0, 0x744A, 0x74E1, 0x7583, 0x7625, 0x76AF, 0x7744, 0x77D9, 0x787D, 0x792A, 0x79C3, 0x7A74, 0x7B12, 0x7BB6, 0x7C4B, 0x7CE0, 0x7D91, 0x7E28, 0x7ECE, 0x7F70, 0x8012, 0x80C3, 0x814D, 0x831A, 0x844D, 0x8580, 0x8615, 0x86A8, 0x874C, 0x87EA, 0x8883, 0x890D, 0x89A4, 0x8ABD, 0x8BEE, 0x8C83, 0x8D1C, 0x8DA6, 0x8E4A, 0x8ED4, 0x8F78, 0x901C, 0x90A6, 0x913F, 0x9279, 0x931F, 0x93A9, 0x9433, 0x94C8, 0x956C, 0x9626, 0x96B0, 0x9745, 0x97DE, 0x990F, 0x9999, 0x9A32, 0x9ABC, 0x9B55, 0x9BE8, 0x9C81, 0x9D18, 0x9DA2, 0x9E2C, 0x9ED9, 0x9F8A, 0xA02E, 0xA0DF, 0xA174, 0xA218, 0xA2C5, 0xA499, 0xA523, 0xA5C7, 0xA707, 0xA79C, 0xA835, 0xA8CA, 0xA95F, 0xAA10, 0xAAA9, 0xABF4, 0xAC8D, 0xAD17, 0xADB0, 0xAE4E, 0xAEE7, 0xAF71, 0xB008, 0xB0A1, 0xB13A, 0xB1E0, 0xB279, 0xB312, 0xB3BF, 0xB454, 0xB4DE, 0xB573, 0xB5FD, 0xB692, 0xB730, 0xB7D2, 0xB867, 0xB8FC, 0xB986, 0xBA28, 0xBAC1, 0xBB6E, 0xBC05, 0xBCA9, 0xBD4D, 0xBDE6, 0xBE79, 0xBF03, 0xBF98, 0xC022, 0xC0B7, 0xC15B, 0xC1FF, 0xC289, 0xC3AD, 0xC442, 0xC4CC, 0xC570, 0xC6A3, 0xC749, 0xC7DE, 0xC877, 0xC91D, 0xC9B6, 0xCA40, 0xCAE2, 0xCB86, 0xCC1F, 0xCCC1, 0xCD6E, 0xCE0C, 0xCEB0, 0xCF45, 0xCFCF, 0xD075, 0xD235, 0xD2E2, 0xD375, 0xD413, 0xD4A8, 0xD54A, 0xD5DD, 0xD676, 0xD70B, 0xD7A0, 0xD835, 0xD8BF, 0xD965, 0xDA09, 0xDAAD, 0xDB42, 0xDBD7, 0xDC79, 0xDD0E, 0xDDA7, 0xDE3C, 0xDF6F, 0xE004, 0xE0A2, 0xE13B, 0xE1D4, 0xE269, 0xE31A, 0xE3AD, 0xE451, 0xE4E6, 0xE588, 0xE61D, 0xE6C3, 0xE75C, 0xE7F1, 0xE884, 0xE91D, 0xE9B2, 0xEA49, 0xEADE, 0xEB82, 0xEC24, 0xECC8, 0xEE13, 0xEEB5, 0xEF59, 0xEFE3, 0xF081}
	samplePositions[spatterns[4]] = []int64{0x1B8, 0x3A0, 0x44F, 0x862, 0xE50, 0x1014, 0x10A7, 0x13A8, 0x14D0, 0x1564, 0x1716, 0x184D, 0x1C50, 0x1CFB, 0x241A, 0x268E, 0x27B6, 0x2854, 0x2901, 0x2B78, 0x30FA, 0x3218, 0x32D2, 0x3548, 0x35F7, 0x3B43, 0x3BE5, 0x42E8, 0x4682, 0x498B, 0x4A1E, 0x4ACD, 0x4CA8, 0x50BF, 0x54DD, 0x5614, 0x59C1, 0x5DE7, 0x6355, 0x63F3, 0x64A0, 0x69EE, 0x6B27, 0x6D0F, 0x715C, 0x74EB, 0x7887, 0x7A7E, 0x7ED8, 0x7F7A, 0x861F, 0x8756, 0x91C9, 0x9576, 0x9B5F, 0x9E36, 0xA222, 0xA2CF, 0xADBA, 0xB31C, 0xB69C, 0xB73A, 0xB990, 0xBACB, 0xBDF0, 0xCA4A, 0xCC29, 0xCCCB, 0xCD78, 0xD23F, 0xD2EC, 0xD37F, 0xD554, 0xE00E, 0xE324, 0xE4F0, 0xE7FB, 0xEB8C, 0xEE1D, 0xEFED}
}
